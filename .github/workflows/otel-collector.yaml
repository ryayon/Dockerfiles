name: Create and publish OpenTelemetry Collector Docker image

on:
  push:
    tags: ["otel-collector-v*"]

env:
  IMAGE_NAME: ${{ github.repository }}/otel-collector
  COLLECTOR_VERSION: v0.120.0

jobs:
  build-the-otel-collector-binary:
    runs-on: ubuntu-latest

    permissions:
      # The two following lines are for `docker/build-push-action`
      packages: write
      contents: write
      # The two following lines are for `actions/attest-build-provenance`
      id-token: write
      attestations: write

    steps:
      -
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v5
      #### https://github.com/open-telemetry/opentelemetry-collector/blob/main/cmd/builder/README.md#tldr ####
      -
        name: Download the OpenTelemetry Collector Builder (ocb)
        run: go install go.opentelemetry.io/collector/cmd/builder@${{ env.COLLECTOR_VERSION }}
      -
        name: Build the Collector
        run: builder --config=otel-collector/manifest.yaml
      -
        name: Prepare otel-collector binary for Docker image
        run: mv _build/ryayon-otelcol otel-collector/ryayon-otelcol
      -
        name: Login to GitHub Package Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            # 0.120.0
            type=match,pattern=(.*)v(.*),group=2
            # v0.120.0
            type=match,pattern=v\d+.\d+.\d+
      -
        name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          # Git context
          #context: "{{defaultContext}}:otel-collector"
          context: otel-collector
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ env.IMAGE_NAME}}:${{ steps.meta.outputs.tags }}